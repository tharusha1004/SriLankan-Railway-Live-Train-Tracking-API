http:
  port: 8080

apiEndpoints:
  trainTracking:
    host: '*'
    paths: '/train-tracking/*'
  schedule:
    host: '*'
    paths: '/schedule/*'
  user:
    host: '*'
    paths: '/user/*'
  notification:
    host: '*'
    paths: '/notification/*'
  engineManagement:
    host: '*'
    paths: '/engine-management/*'
  eventHandling:
    host: '*'
    paths: '/event-handling/*'
  redundantGPSData:
    host: '*'
    paths: '/redundant-gps-data/*'

serviceEndpoints:
  trainTracking:
    url: 'http://localhost:3001'
  schedule:
    url: 'http://localhost:3002'
  user:
    url: 'http://localhost:3003'
  notification:
    url: 'http://localhost:3004'
  engineManagement:
    url: 'http://localhost:3005'
  eventHandling:
    url: 'http://localhost:3006'
  redundantGPSData:
    url: 'http://localhost:3007'

policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
  - rewrite
  - terminate
  - validate

pipelines:
  default:
    apiEndpoints:
      - trainTracking
      - schedule
      - user
      - notification
      - engineManagement
      - eventHandling
      - redundantGPSData
    policies:
      - proxy:
          - action:
              serviceEndpoint: ${apiEndpoint}
              changeOrigin: true



# policies:
#   - jwt:
#       action:
#         secretOrPublicKey: 'your_jwt_secret'
#         checkCredentialExistence: true

# pipelines:
#   default:
#     apiEndpoints:
#       - trainTracking
#       - schedule
#       - user
#       - notification
#       - engineManagement
#       - eventHandling
#       - redundantGPSData
#     policies:
#       - jwt:
#           - condition:
#               name: path-match
#               pattern: '/(train-tracking|schedule|user|notification|engine-management|event-handling|redundant-gps-data)/*'
#       - proxy:
#           - action:
#               serviceEndpoint: ${apiEndpoint}
#               changeOrigin: true