name: Deploy to Production

on:
  push:
    branches:
      - main  # Adjust this if deploying from a different branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker images for each service
      - name: Build and push API Gateway
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: tharusha2001/api-gateway:latest
          context: ./api-gateway
          file: ./api-gateway/Dockerfile

      - name: Build and push Engine Service
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: tharusha2001/engine-service:latest
          context: ./engine-service
          file: ./engine-service/Dockerfile

      - name: Build and push GPS Data Service
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: tharusha2001/gps-data-service:latest
          context: ./gps-data-service
          file: ./gps-data-service/Dockerfile

      - name: Build and push Schedule Service
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: tharusha2001/schedule-service:latest
          context: ./schedule-service
          file: ./schedule-service/Dockerfile

      - name: Build and push Train Service
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: tharusha2001/train-service:latest
          context: ./train-service
          file: ./train-service/Dockerfile

      - name: Build and push Train Tracking Service
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: tharusha2001/train-tracking-service:latest
          context: ./train-tracking-service
          file: ./train-tracking-service/Dockerfile

      - name: Build and push User Service
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: tharusha2001/user-service:latest
          context: ./user-service
          file: ./user-service/Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Pull and deploy all services
            docker pull tharusha2001/api-gateway:latest
            docker pull tharusha2001/engine-service:latest
            docker pull tharusha2001/gps-data-service:latest
            docker pull tharusha2001/schedule-service:latest
            docker pull tharusha2001/train-service:latest
            docker pull tharusha2001/train-tracking-service:latest
            docker pull tharusha2001/user-service:latest

            # Stop and remove old containers
            docker stop api-gateway || true
            docker rm api-gateway || true
            docker stop engine-service || true
            docker rm engine-service || true
            docker stop gps-data-service || true
            docker rm gps-data-service || true
            docker stop schedule-service || true
            docker rm schedule-service || true
            docker stop train-service || true
            docker rm train-service || true
            docker stop train-tracking-service || true
            docker rm train-tracking-service || true
            docker stop user-service || true
            docker rm user-service || true

            # Run new containers
            docker run -d --name api-gateway -p 8081:80 tharusha2001/api-gateway:latest
            docker run -d --name engine-service -p 8082:80 tharusha2001/engine-service:latest
            docker run -d --name gps-data-service -p 8083:80 tharusha2001/gps-data-service:latest
            docker run -d --name schedule-service -p 8084:80 tharusha2001/schedule-service:latest
            docker run -d --name train-service -p 8085:80 tharusha2001/train-service:latest
            docker run -d --name train-tracking-service -p 8086:80 tharusha2001/train-tracking-service:latest
            docker run -d --name user-service -p 8087:80 tharusha2001/user-service:latest
