name: Deploy Node.js Services

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.12.0'  

    - name: Install dependencies
      run: |
        cd engine-service && npm install
        cd ../gps-data-service && npm install
        cd ../schedule-service && npm install
        cd ../train-service && npm install
        cd ../train-tracking-service && npm install
        cd ../user-service && npm install

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
      run: |
        # Ensure SSH key is correctly handled
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem

        rsync -avz -e "ssh -i private_key.pem -o StrictHostKeyChecking=no" ./engine-service $USER@$HOST:/home/$USER/engine-service
        rsync -avz -e "ssh -i private_key.pem -o StrictHostKeyChecking=no" ./gps-data-service $USER@$HOST:/home/$USER/gps-data-service
        rsync -avz -e "ssh -i private_key.pem -o StrictHostKeyChecking=no" ./schedule-service $USER@$HOST:/home/$USER/schedule-service
        rsync -avz -e "ssh -i private_key.pem -o StrictHostKeyChecking=no" ./train-service $USER@$HOST:/home/$USER/train-service
        rsync -avz -e "ssh -i private_key.pem -o StrictHostKeyChecking=no" ./train-tracking-service $USER@$HOST:/home/$USER/train-tracking-service
        rsync -avz -e "ssh -i private_key.pem -o StrictHostKeyChecking=no" ./user-service $USER@$HOST:/home/$USER/user-service

        ssh -i "private_key.pem" "$USER@$HOST" << EOF
          cd /home/$USER/engine-service
          npm install
          pm2 stop engine-service || true
          pm2 delete engine-service || true
          pm2 start app.js --name engine-service --env MONGODB_URI=$MONGODB_URI

          cd /home/$USER/gps-data-service
          npm install
          pm2 stop gps-data-service || true
          pm2 delete gps-data-service || true
          pm2 start app.js --name gps-data-service --env MONGODB_URI=$MONGODB_URI

          cd /home/$USER/schedule-service
          npm install
          pm2 stop schedule-service || true
          pm2 delete schedule-service || true
          pm2 start app.js --name schedule-service --env MONGODB_URI=$MONGODB_URI

          cd /home/$USER/train-service
          npm install
          pm2 stop train-service || true
          pm2 delete train-service || true
          pm2 start app.js --name train-service --env MONGODB_URI=$MONGODB_URI

          cd /home/$USER/train-tracking-service
          npm install
          pm2 stop train-tracking-service || true
          pm2 delete train-tracking-service || true
          pm2 start app.js --name train-tracking-service --env MONGODB_URI=$MONGODB_URI

          cd /home/$USER/user-service
          npm install
          pm2 stop user-service || true
          pm2 delete user-service || true
          pm2 start app.js --name user-service --env MONGODB_URI=$MONGODB_URI

          pm2 save
        EOF
